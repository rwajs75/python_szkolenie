F
test_add_group.py:11 (test_add_group)
app = <class 'application.Application'>

    def test_add_group(app):
>       app.login(username="admin", password="secret")
E       TypeError: login() missing 1 required positional argument: 'self'

test_add_group.py:13: TypeError
E
test_add_group.py:11 (test_add_group)
self = <CallInfo when='teardown' exception: destroy() missing 1 required positional argument: 'self'>
func = <function call_runtest_hook.<locals>.<lambda> at 0x0000000003AAF400>
when = 'teardown'

    def __init__(self, func, when):
        #: context of invocation: one of "setup", "call",
        #: "teardown", "memocollect"
        self.when = when
        self.start = time()
        try:
>           self.result = func()

env\lib\site-packages\_pytest\runner.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
env\lib\site-packages\_pytest\runner.py:182: in <lambda>
    return CallInfo(lambda: ihook(item=item, **kwds), when=when)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:745: in __call__
    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:339: in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:334: in <lambda>
    _MultiCall(methods, kwargs, hook.spec_opts).execute()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:613: in execute
    return _wrapped_call(hook_impl.function(*args), self.execute)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:254: in _wrapped_call
    return call_outcome.get_result()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:279: in get_result
    raise ex[1].with_traceback(ex[2])
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:265: in __init__
    self.result = func()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:614: in execute
    res = hook_impl.function(*args)
env\lib\site-packages\_pytest\runner.py:126: in pytest_runtest_teardown
    item.session._setupstate.teardown_exact(item, nextitem)
env\lib\site-packages\_pytest\runner.py:479: in teardown_exact
    self._teardown_towards(needed_collectors)
env\lib\site-packages\_pytest\runner.py:485: in _teardown_towards
    self._pop_and_teardown()
env\lib\site-packages\_pytest\runner.py:445: in _pop_and_teardown
    self._teardown_with_finalization(colitem)
env\lib\site-packages\_pytest\runner.py:463: in _teardown_with_finalization
    self._callfinalizers(colitem)
env\lib\site-packages\_pytest\runner.py:460: in _callfinalizers
    py.builtin._reraise(*exc)
env\lib\site-packages\_pytest\runner.py:453: in _callfinalizers
    fin()
env\lib\site-packages\_pytest\fixtures.py:755: in finish
    py.builtin._reraise(*e)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <FixtureDef name='app' scope='function' baseid='test_add_group.py' >

    def finish(self):
        exceptions = []
        try:
            while self._finalizer:
                try:
                    func = self._finalizer.pop()
>                   func()
E                   TypeError: destroy() missing 1 required positional argument: 'self'

env\lib\site-packages\_pytest\fixtures.py:749: TypeError
F
test_add_group.py:16 (test_add_empy_group)
app = <class 'application.Application'>

    def test_add_empy_group(app):
>       app.login(username="admin", password="secret")
E       TypeError: login() missing 1 required positional argument: 'self'

test_add_group.py:18: TypeError
E
test_add_group.py:16 (test_add_empy_group)
self = <CallInfo when='teardown' exception: destroy() missing 1 required positional argument: 'self'>
func = <function call_runtest_hook.<locals>.<lambda> at 0x0000000003B19510>
when = 'teardown'

    def __init__(self, func, when):
        #: context of invocation: one of "setup", "call",
        #: "teardown", "memocollect"
        self.when = when
        self.start = time()
        try:
>           self.result = func()

env\lib\site-packages\_pytest\runner.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
env\lib\site-packages\_pytest\runner.py:182: in <lambda>
    return CallInfo(lambda: ihook(item=item, **kwds), when=when)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:745: in __call__
    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:339: in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:334: in <lambda>
    _MultiCall(methods, kwargs, hook.spec_opts).execute()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:613: in execute
    return _wrapped_call(hook_impl.function(*args), self.execute)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:254: in _wrapped_call
    return call_outcome.get_result()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:279: in get_result
    raise ex[1].with_traceback(ex[2])
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:265: in __init__
    self.result = func()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:614: in execute
    res = hook_impl.function(*args)
env\lib\site-packages\_pytest\runner.py:126: in pytest_runtest_teardown
    item.session._setupstate.teardown_exact(item, nextitem)
env\lib\site-packages\_pytest\runner.py:479: in teardown_exact
    self._teardown_towards(needed_collectors)
env\lib\site-packages\_pytest\runner.py:485: in _teardown_towards
    self._pop_and_teardown()
env\lib\site-packages\_pytest\runner.py:445: in _pop_and_teardown
    self._teardown_with_finalization(colitem)
env\lib\site-packages\_pytest\runner.py:463: in _teardown_with_finalization
    self._callfinalizers(colitem)
env\lib\site-packages\_pytest\runner.py:460: in _callfinalizers
    py.builtin._reraise(*exc)
env\lib\site-packages\_pytest\runner.py:453: in _callfinalizers
    fin()
env\lib\site-packages\_pytest\fixtures.py:755: in finish
    py.builtin._reraise(*e)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <FixtureDef name='app' scope='function' baseid='test_add_group.py' >

    def finish(self):
        exceptions = []
        try:
            while self._finalizer:
                try:
                    func = self._finalizer.pop()
>                   func()
E                   TypeError: destroy() missing 1 required positional argument: 'self'

env\lib\site-packages\_pytest\fixtures.py:749: TypeError


=================================== ERRORS ====================================
_____________________ ERROR at teardown of test_add_group _____________________

self = <CallInfo when='teardown' exception: destroy() missing 1 required positional argument: 'self'>
func = <function call_runtest_hook.<locals>.<lambda> at 0x0000000003AAF400>
when = 'teardown'

    def __init__(self, func, when):
        #: context of invocation: one of "setup", "call",
        #: "teardown", "memocollect"
        self.when = when
        self.start = time()
        try:
>           self.result = func()

env\lib\site-packages\_pytest\runner.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
env\lib\site-packages\_pytest\runner.py:182: in <lambda>
    return CallInfo(lambda: ihook(item=item, **kwds), when=when)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:745: in __call__
    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:339: in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:334: in <lambda>
    _MultiCall(methods, kwargs, hook.spec_opts).execute()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:613: in execute
    return _wrapped_call(hook_impl.function(*args), self.execute)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:254: in _wrapped_call
    return call_outcome.get_result()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:279: in get_result
    raise ex[1].with_traceback(ex[2])
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:265: in __init__
    self.result = func()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:614: in execute
    res = hook_impl.function(*args)
env\lib\site-packages\_pytest\runner.py:126: in pytest_runtest_teardown
    item.session._setupstate.teardown_exact(item, nextitem)
env\lib\site-packages\_pytest\runner.py:479: in teardown_exact
    self._teardown_towards(needed_collectors)
env\lib\site-packages\_pytest\runner.py:485: in _teardown_towards
    self._pop_and_teardown()
env\lib\site-packages\_pytest\runner.py:445: in _pop_and_teardown
    self._teardown_with_finalization(colitem)
env\lib\site-packages\_pytest\runner.py:463: in _teardown_with_finalization
    self._callfinalizers(colitem)
env\lib\site-packages\_pytest\runner.py:460: in _callfinalizers
    py.builtin._reraise(*exc)
env\lib\site-packages\_pytest\runner.py:453: in _callfinalizers
    fin()
env\lib\site-packages\_pytest\fixtures.py:755: in finish
    py.builtin._reraise(*e)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <FixtureDef name='app' scope='function' baseid='test_add_group.py' >

    def finish(self):
        exceptions = []
        try:
            while self._finalizer:
                try:
                    func = self._finalizer.pop()
>                   func()
E                   TypeError: destroy() missing 1 required positional argument: 'self'

env\lib\site-packages\_pytest\fixtures.py:749: TypeError
__________________ ERROR at teardown of test_add_empy_group ___________________

self = <CallInfo when='teardown' exception: destroy() missing 1 required positional argument: 'self'>
func = <function call_runtest_hook.<locals>.<lambda> at 0x0000000003B19510>
when = 'teardown'

    def __init__(self, func, when):
        #: context of invocation: one of "setup", "call",
        #: "teardown", "memocollect"
        self.when = when
        self.start = time()
        try:
>           self.result = func()

env\lib\site-packages\_pytest\runner.py:196: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
env\lib\site-packages\_pytest\runner.py:182: in <lambda>
    return CallInfo(lambda: ihook(item=item, **kwds), when=when)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:745: in __call__
    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:339: in _hookexec
    return self._inner_hookexec(hook, methods, kwargs)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:334: in <lambda>
    _MultiCall(methods, kwargs, hook.spec_opts).execute()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:613: in execute
    return _wrapped_call(hook_impl.function(*args), self.execute)
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:254: in _wrapped_call
    return call_outcome.get_result()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:279: in get_result
    raise ex[1].with_traceback(ex[2])
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:265: in __init__
    self.result = func()
env\lib\site-packages\_pytest\vendored_packages\pluggy.py:614: in execute
    res = hook_impl.function(*args)
env\lib\site-packages\_pytest\runner.py:126: in pytest_runtest_teardown
    item.session._setupstate.teardown_exact(item, nextitem)
env\lib\site-packages\_pytest\runner.py:479: in teardown_exact
    self._teardown_towards(needed_collectors)
env\lib\site-packages\_pytest\runner.py:485: in _teardown_towards
    self._pop_and_teardown()
env\lib\site-packages\_pytest\runner.py:445: in _pop_and_teardown
    self._teardown_with_finalization(colitem)
env\lib\site-packages\_pytest\runner.py:463: in _teardown_with_finalization
    self._callfinalizers(colitem)
env\lib\site-packages\_pytest\runner.py:460: in _callfinalizers
    py.builtin._reraise(*exc)
env\lib\site-packages\_pytest\runner.py:453: in _callfinalizers
    fin()
env\lib\site-packages\_pytest\fixtures.py:755: in finish
    py.builtin._reraise(*e)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <FixtureDef name='app' scope='function' baseid='test_add_group.py' >

    def finish(self):
        exceptions = []
        try:
            while self._finalizer:
                try:
                    func = self._finalizer.pop()
>                   func()
E                   TypeError: destroy() missing 1 required positional argument: 'self'

env\lib\site-packages\_pytest\fixtures.py:749: TypeError
================================== FAILURES ===================================
_______________________________ test_add_group ________________________________

app = <class 'application.Application'>

    def test_add_group(app):
>       app.login(username="admin", password="secret")
E       TypeError: login() missing 1 required positional argument: 'self'

test_add_group.py:13: TypeError
_____________________________ test_add_empy_group _____________________________

app = <class 'application.Application'>

    def test_add_empy_group(app):
>       app.login(username="admin", password="secret")
E       TypeError: login() missing 1 required positional argument: 'self'

test_add_group.py:18: TypeError
====================== 2 failed, 2 error in 0.87 seconds ======================